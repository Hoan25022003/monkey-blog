{"version":3,"file":"static/js/727.74fbd4ac.chunk.js","mappings":"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","sources":["components/button/Button2.js","components/layout/Heading.js","components/icon/IconSearch.js","components/layout/Header.js","components/layout/Layout.js","hooks/useFetchData.js","modules/post/PostCategory.js","modules/post/PostImage.js","modules/post/PostItem.js","modules/post/PostMeta.js","modules/post/PostTitle.js","pages/PostDetailPage.js"],"sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nconst ButtonStyle2 = styled.button`\r\n  width: ${(props) => props.size};\r\n  background-color: ${(props) => props.bgColor || props.theme.secondary};\r\n  font-size: 18px;\r\n  font-weight: 600;\r\n  padding: 16px 0;\r\n  color: ${(props) => props.fontColor || \"#fff\"};\r\n  border-radius: 8px;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst Button2 = ({\r\n  type = \"button\",\r\n  link,\r\n  size = \"180px\",\r\n  children,\r\n  onClick = () => {},\r\n  ...props\r\n}) => {\r\n  if (link !== \"\" && typeof link === \"string\") {\r\n    return (\r\n      <Link to={link}>\r\n        <ButtonStyle2 size={size} type={type} {...props}>\r\n          {children}\r\n        </ButtonStyle2>\r\n      </Link>\r\n    );\r\n  }\r\n  return (\r\n    <ButtonStyle2 onClick={onClick} size={size} type={type} {...props}>\r\n      {children}\r\n    </ButtonStyle2>\r\n  );\r\n};\r\n\r\nexport default Button2;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst HeadingStyles = styled.h2`\r\n  color: ${(props) => props.theme.tertiary};\r\n  font-size: 28px;\r\n  position: relative;\r\n  margin-bottom: 30px;\r\n  font-family: \"Montserrat\", sans-serif;\r\n  font-weight: 600;\r\n  margin-top: 60px;\r\n  &:before {\r\n    content: \"\";\r\n    width: 50px;\r\n    height: 4px;\r\n    background-color: ${(props) => props.theme.accent};\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    transform: translate(0, -150%);\r\n  }\r\n`;\r\nconst Heading = ({ className = \"\", children }) => {\r\n  return <HeadingStyles className={className}>{children}</HeadingStyles>;\r\n};\r\n\r\nexport default Heading;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst IconSearchStyle = styled.span`\r\n  padding: 0 16px;\r\n  svg {\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst IconSearch = ({ onClick = () => {} }) => {\r\n  return (\r\n    <IconSearchStyle>\r\n      <svg\r\n        onClick={onClick}\r\n        width=\"18\"\r\n        height=\"17\"\r\n        viewBox=\"0 0 18 17\"\r\n        fill=\"none\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n      >\r\n        <ellipse\r\n          cx=\"7.66669\"\r\n          cy=\"7.05161\"\r\n          rx=\"6.66669\"\r\n          ry=\"6.05161\"\r\n          stroke=\"#999999\"\r\n          strokeWidth=\"1.5\"\r\n        />\r\n        <path\r\n          d=\"M17.0001 15.5237L15.2223 13.9099L14.3334 13.103L12.5557 11.4893\"\r\n          stroke=\"#999999\"\r\n          strokeWidth=\"1.5\"\r\n          strokeLinecap=\"round\"\r\n        />\r\n        <path\r\n          d=\"M11.6665 12.2964C12.9671 12.1544 13.3706 11.8067 13.4443 10.6826\"\r\n          stroke=\"#999999\"\r\n          strokeWidth=\"1.5\"\r\n          strokeLinecap=\"round\"\r\n        />\r\n      </svg>\r\n    </IconSearchStyle>\r\n  );\r\n};\r\n\r\nexport default IconSearch;\r\n","import { signOut } from \"firebase/auth\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport { useAuth } from \"../../contexts/authContext\";\r\nimport { auth } from \"../../firebases/firebaseConfig\";\r\nimport Button2 from \"../button/Button2\";\r\nimport IconSearch from \"../icon/IconSearch\";\r\n\r\nconst HeaderStyle = styled.header`\r\n  display: flex;\r\n  margin: 40px 0;\r\n  justify-content: space-between;\r\n  .header-left {\r\n    display: flex;\r\n    align-items: center;\r\n    img {\r\n      width: 42px;\r\n    }\r\n    &-nav {\r\n      display: flex;\r\n      margin-left: 24px;\r\n      gap: 0 40px;\r\n      .nav {\r\n        font-size: 16px;\r\n        font-weight: 500;\r\n        cursor: pointer;\r\n        line-height: 27px;\r\n        transition: all linear 0.2s;\r\n        color: #000000;\r\n        text-decoration: none;\r\n        &:hover {\r\n          color: ${(props) => props.theme.secondary};\r\n        }\r\n      }\r\n    }\r\n  }\r\n  .header-right {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 0 20px;\r\n    &-search {\r\n      width: 320px;\r\n      display: flex;\r\n      align-items: center;\r\n      border: 1px solid #cfcfcf;\r\n      border-radius: 8px;\r\n      input {\r\n        width: 100%;\r\n        padding: 16px 0 16px 20px;\r\n        border-radius: inherit;\r\n        &::placeholder {\r\n          color: #999999;\r\n          font-size: 15px;\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst listNav = [\r\n  {\r\n    url: \"/\",\r\n    title: \"Home\",\r\n  },\r\n  {\r\n    url: \"/blog\",\r\n    title: \"Blog\",\r\n  },\r\n  {\r\n    url: \"/contact\",\r\n    title: \"Contact\",\r\n  },\r\n];\r\n\r\nconst Header = () => {\r\n  const { userInfo } = useAuth();\r\n  const handleSignOut = () => {\r\n    signOut(auth);\r\n    window.location.href = \"/login\";\r\n  };\r\n  return (\r\n    <HeaderStyle className=\"header\">\r\n      <div className=\"header-left\">\r\n        <a href=\"/\">\r\n          <img src=\"monkey-logo.png\" alt=\"\" />\r\n        </a>\r\n        <div className=\"header-left-nav\">\r\n          {listNav.map((nav) => (\r\n            <Link to={nav.url} key={nav.title} className=\"nav\">\r\n              {nav.title}\r\n            </Link>\r\n          ))}\r\n        </div>\r\n      </div>\r\n      <div className=\"header-right\">\r\n        <div className=\"header-right-search\">\r\n          <input type=\"text\" placeholder=\"Search posts...\" />\r\n          <IconSearch></IconSearch>\r\n        </div>\r\n        {userInfo?.email ? (\r\n          <Button2 onClick={handleSignOut}>Log Out</Button2>\r\n        ) : (\r\n          <Button2 link={\"/register\"}>Sign Up</Button2>\r\n        )}\r\n      </div>\r\n    </HeaderStyle>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport Header from \"./Header\";\r\n\r\nconst Layout = ({ children }) => {\r\n  return (\r\n    <div className=\"container\">\r\n      <Header></Header>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","import { collection, getDocs, query } from \"firebase/firestore\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { db } from \"../firebases/firebaseConfig\";\r\n\r\nexport default function useFetchData(tableData, [...condition]) {\r\n  const [data, setData] = useState([]);\r\n  useEffect(() => {\r\n    async function getData() {\r\n      const colRef = collection(db, tableData);\r\n      const q = query(colRef, ...condition);\r\n      const querySnapshot = await getDocs(q);\r\n      let result = [];\r\n      querySnapshot.forEach((doc) => {\r\n        result.push({\r\n          id: doc.id,\r\n          ...doc.data(),\r\n        });\r\n      });\r\n      setData(result);\r\n    }\r\n    getData();\r\n  }, []);\r\n  return { data, setData };\r\n}\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nconst PostCategoryStyle = styled.span`\r\n  display: inline-block;\r\n  padding: 4px 10px;\r\n  border-radius: 10px;\r\n  color: #6b6b6b;\r\n  font-size: 14px;\r\n  font-weight: 600;\r\n  white-space: nowrap;\r\n  background-color: ${(props) => props.bgColor || props.theme.grayF3}; ;\r\n`;\r\n\r\nconst PostCategory = ({ bgColor, style, to, children, ...props }) => {\r\n  if (to)\r\n    return (\r\n      <Link to={to} className=\"link\">\r\n        <PostCategoryStyle bgColor={bgColor} style={style} {...props}>\r\n          {children}\r\n        </PostCategoryStyle>\r\n      </Link>\r\n    );\r\n  return (\r\n    <PostCategoryStyle bgColor={bgColor} style={style} {...props}>\r\n      {children}\r\n    </PostCategoryStyle>\r\n  );\r\n};\r\n\r\nexport default PostCategory;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nconst PostImageStyle = styled.img`\r\n  width: 100%;\r\n  height: 100%;\r\n  object-fit: cover;\r\n  border-radius: 16px;\r\n`;\r\n\r\nconst PostImage = ({ src, to = null, ...props }) => {\r\n  if (to) {\r\n    return (\r\n      <Link to={to}>\r\n        <PostImageStyle src={src} alt=\"unsplash\" {...props} />\r\n      </Link>\r\n    );\r\n  }\r\n  return <PostImageStyle src={src} alt=\"unsplash\" {...props} />;\r\n};\r\n\r\nexport default PostImage;\r\n","import { doc, getDoc } from \"firebase/firestore\";\r\nimport React from \"react\";\r\nimport slugify from \"slugify\";\r\nimport styled from \"styled-components\";\r\nimport { db } from \"../../firebases/firebaseConfig\";\r\nimport PostCategory from \"./PostCategory\";\r\nimport PostImage from \"./PostImage\";\r\nimport PostMeta from \"./PostMeta\";\r\nimport PostTitle from \"./PostTitle\";\r\n\r\nconst PostItemStyles = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: flex-start;\r\n  .post {\r\n    &-image {\r\n      height: 202px;\r\n      margin-bottom: 12px;\r\n      display: block;\r\n      width: 100%;\r\n      img {\r\n        width: 100%;\r\n        height: 100%;\r\n        object-fit: cover;\r\n        border-radius: 16px;\r\n      }\r\n    }\r\n    &-info {\r\n      display: flex;\r\n      align-items: center;\r\n      gap: 12px;\r\n      font-size: 14px;\r\n      font-weight: 600;\r\n      color: #6b6b6b;\r\n      margin-top: auto;\r\n    }\r\n    &-dot {\r\n      display: inline-block;\r\n      width: 4px;\r\n      height: 4px;\r\n      background-color: currentColor;\r\n      border-radius: 100rem;\r\n    }\r\n    &-title {\r\n      font-weight: bold;\r\n      line-height: 1.5;\r\n      display: block;\r\n      font-size: 18px;\r\n      margin-bottom: 8px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst PostItem = ({ postInfo }) => {\r\n  const { image, categoryID, title, slug, createAt, userID } = postInfo;\r\n  const [category, setCategory] = React.useState({});\r\n  const [author, setAuthor] = React.useState({});\r\n  React.useEffect(() => {\r\n    async function getCategory() {\r\n      const docRef = doc(db, \"category\", categoryID);\r\n      const docSnap = await getDoc(docRef);\r\n      setCategory(docSnap.data());\r\n    }\r\n    async function getAuthor() {\r\n      const docRef = doc(db, \"users\", userID);\r\n      const docSnap = await getDoc(docRef);\r\n      setAuthor(docSnap.data());\r\n    }\r\n    getAuthor();\r\n    getCategory();\r\n  }, [categoryID, userID]);\r\n  const date = new Date(createAt.seconds * 1000);\r\n  const formDate = date.toLocaleDateString(\"vi-VI\");\r\n  if (!postInfo) return;\r\n  return (\r\n    <PostItemStyles>\r\n      <div className=\"post-image\">\r\n        <PostImage to={\"/\" + slug} src={image}></PostImage>\r\n      </div>\r\n      <PostCategory style={{ marginBottom: \"12px\" }}>\r\n        {category?.name}\r\n      </PostCategory>\r\n      <PostTitle to={\"/\" + slug} style={{ marginBottom: \"12px\" }} size=\"18px\">\r\n        {title}\r\n      </PostTitle>\r\n      <PostMeta\r\n        author={author?.fullName}\r\n        time={formDate}\r\n        to={\"/\" + slugify(author?.fullName || \"\", { lower: true })}\r\n      ></PostMeta>\r\n    </PostItemStyles>\r\n  );\r\n};\r\n\r\nexport default PostItem;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nconst PostMetaStyle = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 10px;\r\n  font-size: 14px;\r\n  font-weight: 600;\r\n  color: ${(props) => props.color || props.theme.gray6B};\r\n  .post-dot {\r\n    display: inline-block;\r\n    width: 6px;\r\n    height: 6px;\r\n    background-color: currentColor;\r\n    border-radius: 100rem;\r\n  }\r\n`;\r\n\r\nconst PostMeta = ({\r\n  time = \"Mar 23\",\r\n  author = \"Andiez Le\",\r\n  color,\r\n  to = \"\",\r\n  ...props\r\n}) => {\r\n  return (\r\n    <PostMetaStyle color={color} {...props}>\r\n      <span className=\"post-time\">{time}</span>\r\n      <span className=\"post-dot\"></span>\r\n      <Link to={to}>\r\n        <span className=\"post-author\">{author}</span>\r\n      </Link>\r\n    </PostMetaStyle>\r\n  );\r\n};\r\n\r\nexport default PostMeta;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nconst PostTitleStyle = styled.h3`\r\n  display: block;\r\n  font-weight: 600;\r\n  line-height: 1.5;\r\n  font-size: ${(props) => props.size};\r\n`;\r\n\r\nconst PostTitle = ({ size = \"22px\", style, to, children, ...props }) => {\r\n  if (to)\r\n    return (\r\n      <Link to={to} className=\"link\">\r\n        <PostTitleStyle size={size} style={style} {...props}>\r\n          {children}\r\n        </PostTitleStyle>\r\n      </Link>\r\n    );\r\n  return (\r\n    <PostTitleStyle size={size} style={style} {...props}>\r\n      {children}\r\n    </PostTitleStyle>\r\n  );\r\n};\r\n\r\nexport default PostTitle;\r\n","import {\r\n  collection,\r\n  doc,\r\n  getDoc,\r\n  getDocs,\r\n  query,\r\n  where,\r\n} from \"firebase/firestore\";\r\nimport React from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport Heading from \"../components/layout/Heading\";\r\nimport Layout from \"../components/layout/Layout\";\r\nimport { db } from \"../firebases/firebaseConfig\";\r\nimport parse from \"html-react-parser\";\r\nimport useFetchData from \"../hooks/useFetchData\";\r\nimport PostCategory from \"../modules/post/PostCategory\";\r\nimport PostImage from \"../modules/post/PostImage\";\r\nimport PostItem from \"../modules/post/PostItem\";\r\nimport PostMeta from \"../modules/post/PostMeta\";\r\nimport PostTitle from \"../modules/post/PostTitle\";\r\n\r\nconst PostDetailsPageStyles = styled.div`\r\n  padding-bottom: 100px;\r\n  .post {\r\n    &-header {\r\n      display: flex;\r\n      justify-content: space-between;\r\n      align-items: center;\r\n      gap: 40px;\r\n      margin: 40px 0;\r\n    }\r\n    &-feature {\r\n      flex: 1;\r\n      height: 466px;\r\n      width: 466px;\r\n      object-fit: cover;\r\n      border-radius: 20px;\r\n    }\r\n    &-heading {\r\n      font-weight: bold;\r\n      font-size: 36px;\r\n      margin-bottom: 16px;\r\n    }\r\n    &-info {\r\n      flex: 1;\r\n    }\r\n    &-content {\r\n      max-width: 700px;\r\n      margin: 50px auto;\r\n      h2 {\r\n        font-size: 22px;\r\n        font-weight: 600;\r\n        margin-top: 30px;\r\n      }\r\n      p {\r\n        font-size: 16px;\r\n        line-height: 32px;\r\n        margin: 10px 0 20px;\r\n      }\r\n    }\r\n  }\r\n  .author {\r\n    margin-top: 40px;\r\n    margin-bottom: 80px;\r\n    display: flex;\r\n    align-items: center;\r\n    border-radius: 20px;\r\n    padding: 20px;\r\n    background-color: ${(props) => props.theme.grayF3};\r\n    &-image {\r\n      width: 200px;\r\n      height: 200px;\r\n      flex-shrink: 0;\r\n      border-radius: inherit;\r\n    }\r\n    &-image img {\r\n      width: 100%;\r\n      height: 100%;\r\n      object-fit: cover;\r\n      border-radius: inherit;\r\n    }\r\n    &-content {\r\n      flex: 1;\r\n      padding-left: 20px;\r\n    }\r\n    &-name {\r\n      font-weight: bold;\r\n      font-size: 20px;\r\n      margin-top: 20px;\r\n    }\r\n    &-desc {\r\n      font-size: 14px;\r\n      line-height: 2;\r\n    }\r\n  }\r\n  @media screen and (max-width: 1023.98px) {\r\n    padding-bottom: 40px;\r\n    .post {\r\n      &-header {\r\n        flex-direction: column;\r\n      }\r\n      &-feature {\r\n        height: auto;\r\n      }\r\n      &-heading {\r\n        font-size: 26px;\r\n      }\r\n      &-content {\r\n        margin: 40px 0;\r\n      }\r\n    }\r\n    .author {\r\n      flex-direction: column;\r\n      &-image {\r\n        width: 100%;\r\n        height: auto;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst PostDetailsPage = () => {\r\n  const { postSlug } = useParams();\r\n  const [posts, setPosts] = React.useState([]);\r\n  React.useEffect(() => {\r\n    document.body.scrollIntoView({ behavior: \"smooth\", block: \"start\" });\r\n    async function getData() {\r\n      const colRef = collection(db, \"posts\");\r\n      const q = query(colRef, where(\"slug\", \"==\", postSlug));\r\n      const querySnapshot = await getDocs(q);\r\n      let result = [];\r\n      querySnapshot.forEach((doc) => {\r\n        result.push({\r\n          id: doc.id,\r\n          ...doc.data(),\r\n        });\r\n      });\r\n      setPosts(result);\r\n    }\r\n    getData();\r\n  }, [postSlug]);\r\n  const [postContent, setPostContent] = React.useState({});\r\n  const [category, setCategory] = React.useState({});\r\n  const [author, setAuthor] = React.useState({});\r\n  React.useEffect(() => {\r\n    if (!posts) return;\r\n    document.title = posts[0]?.title || \"This page is invalid\";\r\n    setPostContent(posts[0]);\r\n    async function getCategory() {\r\n      const docRef = doc(db, \"category\", posts[0]?.categoryID);\r\n      const docSnap = await getDoc(docRef);\r\n      setCategory(docSnap.data());\r\n    }\r\n    async function getAuthor() {\r\n      const docRef = doc(db, \"users\", posts[0]?.userID);\r\n      const docSnap = await getDoc(docRef);\r\n      setAuthor(docSnap.data());\r\n    }\r\n    getCategory();\r\n    getAuthor();\r\n  }, [posts]);\r\n  if (!postSlug || !postContent) return;\r\n  const { title, createAt, image, content, categoryID } = postContent;\r\n  const date = new Date(createAt?.seconds * 1000);\r\n  return (\r\n    <PostDetailsPageStyles>\r\n      <Layout>\r\n        <div className=\"container\">\r\n          <div className=\"post-header\">\r\n            <PostImage src={image} className=\"post-feature\"></PostImage>\r\n            <div className=\"post-info\">\r\n              <PostCategory to={\"/\" + category.slug} className=\"mb-6\">\r\n                {category.name}\r\n              </PostCategory>\r\n              <PostTitle className=\"post-heading\">{title}</PostTitle>\r\n              <PostMeta\r\n                time={date.toLocaleDateString(\"vi-VI\")}\r\n                author={author.fullName}\r\n              ></PostMeta>\r\n            </div>\r\n          </div>\r\n          <div className=\"post-content\">\r\n            <div className=\"entry-content\">{parse(content || \"\")}</div>\r\n            <div className=\"author\">\r\n              <div className=\"author-image\">\r\n                <img src={author?.avatar} alt=\"\" />\r\n              </div>\r\n              <div className=\"author-content\">\r\n                <h3 className=\"author-name\">{author?.fullName}</h3>\r\n                <p className=\"author-desc\">\r\n                  {author?.desc ||\r\n                    \"Lorem ipsum dolor sit amet, consectetur adipisicing elit. Laborum rem consequatur ex nisi nihil tenetur! Cupiditate, doloribus aut. Unde quisquam velit voluptas vel officiis, sint magni aspernatur eos nisi dolorum.\"}\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <PostRelate categoryID={categoryID} postSlug={postSlug}></PostRelate>\r\n        </div>\r\n      </Layout>\r\n    </PostDetailsPageStyles>\r\n  );\r\n};\r\n\r\nconst PostRelate = ({ categoryID, postSlug }) => {\r\n  let { data: listPostRelate } = useFetchData(\"posts\", [\r\n    where(\"categoryID\", \"==\", categoryID),\r\n    where(\"status\", \"==\", 1),\r\n  ]);\r\n  listPostRelate = listPostRelate.filter((item) => item.slug !== postSlug);\r\n  if (!listPostRelate || listPostRelate.length === 0) return;\r\n  return (\r\n    <div className=\"post-related\">\r\n      <Heading>Bài viết liên quan</Heading>\r\n      <div className=\"grid grid-cols-4 gap-8\">\r\n        {listPostRelate.map((post) => (\r\n          <PostItem key={post.id} postInfo={post}></PostItem>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PostDetailsPage;\r\n"],"names":["ButtonStyle2","styled","props","size","bgColor","theme","secondary","fontColor","type","link","children","onClick","to","HeadingStyles","tertiary","accent","className","IconSearchStyle","width","height","viewBox","fill","xmlns","cx","cy","rx","ry","stroke","strokeWidth","d","strokeLinecap","HeaderStyle","listNav","url","title","userInfo","useAuth","href","src","alt","map","nav","placeholder","email","Button2","signOut","auth","window","location","useFetchData","tableData","condition","useState","data","setData","useEffect","colRef","collection","db","q","query","getDocs","querySnapshot","result","forEach","doc","push","id","getData","PostCategoryStyle","grayF3","style","PostImageStyle","PostItemStyles","postInfo","image","categoryID","slug","createAt","userID","React","category","setCategory","author","setAuthor","docRef","getDoc","docSnap","getAuthor","getCategory","formDate","Date","seconds","toLocaleDateString","marginBottom","name","fullName","time","slugify","lower","PostMetaStyle","color","gray6B","PostTitleStyle","PostDetailsPageStyles","PostRelate","postSlug","listPostRelate","where","filter","item","length","post","useParams","posts","setPosts","document","body","scrollIntoView","behavior","block","postContent","setPostContent","content","date","parse","avatar","desc"],"sourceRoot":""}