{"version":3,"file":"static/js/714.1587257a.chunk.js","mappings":"6PAGMA,EAAeC,EAAAA,GAAAA,IAAH,qWAEP,SAACC,GAAD,OAAWA,EAAMC,QAChB,SAACD,GAAD,OAAWA,EAAMC,QACjB,SAACD,GAAD,OAAWA,EAAME,UACb,SAACF,GAAD,OAAWA,EAAME,UAiBjC,EAJuB,SAAC,GAAsB,IAApBD,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,OAC9B,OAAO,SAACJ,EAAD,CAAcG,KAAMA,EAAMC,OAAQA,K,gCCjBrCC,EAAcJ,EAAAA,GAAAA,OAAH,gTAED,SAACC,GAAD,OAAWA,EAAMI,MAAMC,iBAuCvC,EAxBe,SAAC,GAKT,IAJLC,EAII,EAJJA,SAII,IAHJC,KAAAA,OAGI,MAHG,SAGH,MAFJC,QAAAA,OAEI,MAFM,aAEN,EADDR,GACC,YACIS,EAAYT,EAAZS,QACR,OACE,SAACN,GAAD,gBAAaI,KAAMA,EAAMC,QAASA,EAASE,SAAUD,GAAaT,GAAlE,aACGS,GACC,SAAC,EAAD,CAAgBR,KAAK,OAAOC,OAAO,QAEnCI,O,oHCHR,IA5Bc,SAAC,GAAmD,IAAjDK,EAAgD,EAAhDA,QAASL,EAAuC,EAAvCA,SAAUM,EAA6B,EAA7BA,QAASC,EAAoB,EAApBA,KAASC,GAAW,YACvDC,GAAUC,EAAAA,EAAAA,IAAc,CAC9BJ,QAAAA,EACAC,KAAAA,EACAI,aAAc,KAHRF,MAKR,OACE,8BACE,kCACEG,SAAU,aACVP,QAASA,EACTJ,KAAK,QACLY,UAAU,gBACNJ,GACAD,KAEN,iBAAKK,UAAU,uDAAf,WACE,gBACEA,UAAS,+BACPR,EAAU,eAAiB,kBAG/B,0BAAOL,Y,0GCvBTc,GAAkBC,EAAAA,EAAAA,iBACxB,SAASC,EAAT,GAAyC,IAAVtB,EAAS,oBACtC,GAAwBuB,EAAAA,EAAAA,WAAS,GAAjC,eAAOC,EAAP,KAAaC,EAAb,KAIMC,EAAQ,CAAEC,qBAHa,WAC3BF,GAASD,IAE2BA,KAAAA,EAAMC,QAAAA,GAC5C,OACE,SAACL,EAAgBQ,UAAjB,gBAA0BF,MAAOA,GAAW1B,GAA5C,aACGA,EAAMM,YAKb,SAASuB,IACP,IAAMC,GAAUC,EAAAA,EAAAA,YAAWX,GAC3B,GAAuB,qBAAZU,EACT,MAAM,IAAIE,MAAM,oDAClB,OAAOF,ECjBT,IAgBA,EAhBa,SAAC,GAAkB,IAAhBxB,EAAe,EAAfA,SACd,EAA0BuB,IAAlBL,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QACd,OACE,8BACGD,IACC,gBACEL,UAAU,qDACVX,QAAS,kBAAMiB,GAAQ,IAFzB,SAIGnB,OCoCX,EA7Ce,SAAC,GAAqB,IAAnB2B,EAAkB,EAAlBA,YAChB,EAAuCJ,IAA/BL,EAAR,EAAQA,KAAMG,EAAd,EAAcA,qBACd,OACE,iBACER,UAAU,wFACVX,QAASmB,EAFX,WAIE,0BAAOM,KACP,0BACGT,GACC,gBACEU,MAAM,6BACNf,UAAU,UACVgB,KAAK,OACLC,QAAQ,YACRC,OAAO,eACPC,YAAY,IANd,UAQE,iBACEC,cAAc,QACdC,eAAe,QACfC,EAAE,qBAIN,gBACEP,MAAM,6BACNf,UAAU,UACVgB,KAAK,OACLC,QAAQ,YACRC,OAAO,eACPC,YAAY,IANd,UAQE,iBACEC,cAAc,QACdC,eAAe,QACfC,EAAE,2B,6BCvBhB,EAXiB,SAAC,GAAyC,IAAvCR,EAAsC,EAAtCA,YAAa3B,EAAyB,EAAzBA,SAAaN,GAAY,YACxD,OACE,SAACsB,GAAD,kBAAsBtB,GAAtB,cACE,iBAAKmB,UAAU,oCAAf,WACE,SAAC,EAAD,CAAQc,YAAaA,KACrB,SAAC,EAAD,UAAO3B,Y,0CCIf,IAZe,SAACN,GACd,IAAQQ,EAAYR,EAAZQ,QACR,OACE,gBACEW,UAAU,2FACVX,QAASA,EAFX,SAIGR,EAAMM,a,iECNPoC,EAAa3C,EAAAA,GAAAA,IAAH,mHAYhB,IAJc,SAAC,GAAkB,IAAhBO,EAAe,EAAfA,SACf,OAAO,SAACoC,EAAD,CAAYvB,UAAU,aAAtB,SAAoCb,M,qJCRvCqC,EAAa5C,EAAAA,GAAAA,IAAH,oYAWQ,SAACC,GAAD,OAAWA,EAAM4C,WAEf,SAAC5C,GAAD,OAAWA,EAAMI,MAAMyC,aA6BjD,IArBc,SAAC,GAOR,IANLvC,EAMI,EANJA,SAMI,IALJC,KAAAA,OAKI,MALG,OAKH,EAJJM,EAII,EAJJA,KACAD,EAGI,EAHJA,QAEGZ,GACC,EAFJ8C,cAEI,aACI/B,GAAUC,EAAAA,EAAAA,IAAc,CAC9BJ,QAAAA,EACAC,KAAAA,IAFME,MAKR,OACE,UAAC4B,EAAD,YACE,kCAAOpC,KAAMA,EAAMwC,GAAIlC,GAAUE,GAAWf,IAC3CM,O,iECtCD0C,EAAajD,EAAAA,GAAAA,MAAH,oFAUhB,IAJc,SAAC,GAAwB,IAAtBc,EAAqB,EAArBA,KAAMP,EAAe,EAAfA,SACrB,OAAO,SAAC0C,EAAD,CAAYC,QAASpC,EAArB,SAA4BP,M,mFC0BrC,IAjCe,SAACN,GACd,IAAQkD,EAAyBlD,EAAzBkD,GAAI1C,EAAqBR,EAArBQ,QAAYM,GAAxB,OAAiCd,EAAjC,GAEA,OACE,8BACE,kBACEO,KAAK,WACLI,QAASuC,EACT/B,UAAU,eACVD,SAAU,aACVV,QAASA,KAEX,gCACEW,UAAS,iGACP+B,EAAK,eAAiB,gBAEpBpC,GAJN,cAME,iBACEK,UAAS,8EACP+B,EAAK,qBAAuB,c,4ICuDxC,IA3EoB,SAAClD,GACnB,IACEa,EAOEb,EAPFa,KADF,EAQIb,EANFmB,UAAAA,OAFF,MAEc,GAFd,IAQInB,EALFmD,SAAAA,OAHF,MAGa,EAHb,IAQInD,EAJFoD,MAAAA,OAJF,MAIU,GAJV,EAKEC,EAGErD,EAHFqD,kBAEGvC,GACDd,EAFFsD,aANF,OAQItD,EARJ,IASA,OACE,mBACEmB,UAAS,2HAAsHA,EAAtH,mCADX,WAGE,0BAAOZ,KAAK,OAAOM,KAAMA,EAAMM,UAAU,gBAAmBL,KAC1DsC,GAAsB,IAAbD,IACT,iBAAKhC,UAAU,6DAAf,WACE,gBACEoC,IAAI,iBACJC,IAAI,aACJrC,UAAU,uBAEZ,cAAGA,UAAU,gBAAb,8BAGFiC,GAAsB,IAAbD,IACT,gBACEhC,UAAS,sGAGZiC,IACC,iCACE,gBAAKG,IAAKH,EAAOjC,UAAU,6BAA6BqC,IAAI,MAC5D,mBACErC,UAAS,uHACTX,QAAS6C,EACT9C,KAAK,SAHP,UAKE,gBACE2B,MAAM,6BACNC,KAAK,OACLC,QAAQ,YACRE,YAAY,MACZD,OAAO,eACPlB,UAAU,kBANZ,UAQE,iBACEoB,cAAc,QACdC,eAAe,QACfC,EAAE,oaAMVW,IACA,gBACEjC,UAAU,sFACVsC,MAAO,CACLC,MAAM,GAAD,OAAKC,KAAKC,KAAKT,GAAf,a,4JC1DF,SAASU,EAAaC,EAAtB,GAAkD,IAAbC,GAAY,mBAC9D,GAAwBxC,EAAAA,EAAAA,UAAS,IAAjC,eAAOyC,EAAP,KAAaC,EAAb,KAiBA,OAhBAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,iGACQC,GAASC,EAAAA,EAAAA,IAAWC,EAAAA,GAAIP,GACxBQ,EAAIC,EAAAA,GAAAA,WAAA,GAAMJ,GAAN,eAAiBJ,KAF7B,UAG8BS,EAAAA,EAAAA,IAAQF,GAHtC,OAGQG,EAHR,OAIMC,EAAS,GACbD,EAAcE,SAAQ,SAACC,GACrBF,EAAOG,MAAP,QACE9B,GAAI6B,EAAI7B,IACL6B,EAAIZ,YAGXC,EAAQS,GAXV,4CADc,uBAAC,WAAD,wBAcdI,KACC,IACI,CAAEd,KAAAA,EAAMC,QAAAA,K,uFCbF,SAASc,EAAiBC,EAAUC,GACjD,OAA0B1D,EAAAA,EAAAA,UAAS,IAAnC,eAAO6B,EAAP,KAAc8B,EAAd,KACA,GAA8C3D,EAAAA,EAAAA,UAAS,GAAvD,eAAO4D,EAAP,KAAwBC,EAAxB,KA+DA,MAAO,CACLhC,MAAAA,EACA8B,SAAAA,EACAC,gBAAAA,EACAC,mBAAAA,EACAC,kBA9BwB,SAACC,GACzB,IAAMC,EAAQD,EAAEE,OAAOD,MAAM,GACxBA,IACLP,EAAS,aAAcO,EAAM1E,MAvCJ,SAAC4E,GAC1B,IAAMC,GAAUC,EAAAA,EAAAA,MACVC,GAAaC,EAAAA,EAAAA,IAAIH,EAAS,UAAYD,EAAK5E,MAC3CiF,GAAaC,EAAAA,EAAAA,IAAqBH,EAAYH,GAEpDK,EAAW5C,GACT,iBACA,SAAC8C,GAEC,IAAM7C,EACH6C,EAASC,iBAAmBD,EAASE,WAAc,IAEtD,OADAd,EAAmBjC,GACX6C,EAASG,OACf,IAAK,SACHC,QAAQC,IAAI,oBACZ,MACF,IAAK,UACHD,QAAQC,IAAI,qBACZ,MAEF,QACED,QAAQC,IAAI,sBAGlB,SAACC,GACCF,QAAQC,IAAIC,MAEd,YAEEC,EAAAA,EAAAA,IAAeT,EAAWE,SAASH,KAAKW,MAAK,SAACC,GAC5CvB,EAASuB,SAUfC,CAAmBnB,KA2BnBlC,kBAxBwB,WACxB,IAAMqC,GAAUC,EAAAA,EAAAA,MAGVgB,GAAYd,EAAAA,EAAAA,IAAIH,EAAS,UAAYT,EAAU,gBAGrD2B,EAAAA,EAAAA,IAAaD,GACVH,MAAK,WAEJtB,EAAS,IACTE,EAAmB,MAEpByB,OAAM,SAACP,W,0CC1Dd,IATyB,SAAC,GAA+B,IAAD,IAA5BQ,MAAAA,OAA4B,MAApB,GAAoB,MAAhBC,KAAAA,OAAgB,MAAT,GAAS,EACtD,OACE,iBAAK5F,UAAU,QAAf,WACE,eAAIA,UAAU,0BAAd,SAAyC2F,KACzC,cAAG3F,UAAU,YAAb,SAA0B4F,S,iYCsBhCC,EAAAA,MAAAA,SAAe,wBAAyBC,EAAAA,GAExC,IAAMC,EAASC,EAAAA,GAAW,CACxBL,MAAOK,EAAAA,KACJC,SAAS,2BACTC,IAAI,GAAI,yCACXC,WAAYH,EAAAA,KAAaC,SAAS,yCAClChE,MAAO+D,EAAAA,KAAaC,SAAS,0CAC7BG,OAAQJ,EAAAA,KACRK,KAAML,EAAAA,KACNM,IAAKN,EAAAA,OA4OP,UAtOuB,WACrB,OAAiBO,EAAAA,EAAAA,MACXC,GADN,eACsBC,IAAI,MACpBC,GAAWC,EAAAA,EAAAA,MACjB,EAAgCC,EAAAA,SAAe,IAA/C,eAAOC,EAAP,KAAiBC,EAAjB,KACA,EAA8BF,EAAAA,SAAe,IAA7C,eAAOG,EAAP,KAAgBC,EAAhB,KACA,EAA0CJ,EAAAA,WAA1C,eAAOK,EAAP,KAAsBC,EAAtB,KACA,GAQIC,EAAAA,EAAAA,IAAQ,CACVC,KAAM,WACNC,UAAUC,EAAAA,EAAAA,GAAYvB,KATtBtG,EADF,EACEA,QACA8H,EAFF,EAEEA,MACA1D,EAHF,EAGEA,SACA2D,EAJF,EAIEA,aACA1D,EALF,EAKEA,UACA2D,EANF,EAMEA,MANF,IAOEC,UAAaC,EAPf,EAOeA,OAAQC,GAPvB,EAOuBA,aAAcC,GAPrC,EAOqCA,QAKrC,IAOIjE,EAAAA,EAAAA,GAAiBC,EAAUC,GAN7B7B,GADF,GACEA,MACA8B,GAFF,GAEEA,SACAC,GAHF,GAGEA,gBAEAE,IALF,GAIED,mBAJF,GAKEC,mBACAhC,GANF,GAMEA,kBAEI4F,GAAcP,EAAM,UACpBQ,GAAWR,EAAM,OACTS,IAAetF,EAAAA,EAAAA,GAAa,WAAY,EACpDuF,EAAAA,EAAAA,IAAM,SAAU,KAAM,KADhBpF,KAGR+D,EAAAA,WAAgB,WACd,IAAMsB,EAAYC,OAAOC,OAAOT,GAC5BO,EAAUG,OAAS,GACrBC,EAAAA,GAAAA,MAAYJ,EAAU,GAAGK,QAAS,CAChCC,cAAc,EACdlG,MAAO,CACLmG,gBAAiBxJ,EAAAA,GAAAA,qBAItB,CAAC0I,IACJf,EAAAA,WAAgB,WAAM,wCACpB,yFACOJ,EADP,wDAEQxD,GAASS,EAAAA,EAAAA,IAAIP,EAAAA,GAAI,QAASsD,GAFlC,UAGwBkC,EAAAA,EAAAA,IAAO1F,GAH/B,OAGQ2F,EAHR,OAIE7B,EAAY6B,EAAQ9F,QACpBkB,GAAS4E,EAAQ9F,OAAOZ,OACxB+E,EAAW2B,EAAQ9F,OAAOkE,SAC1BU,EAAMkB,EAAQ9F,QAPhB,6CADoB,8DAUpB,6FACQ+F,GAASnF,EAAAA,EAAAA,IAAIP,EAAAA,GAAI,WAAY2D,EAASV,YAD9C,UAEwBuC,EAAAA,EAAAA,IAAOE,GAF/B,OAEQC,EAFR,OAGE3B,EAAiB2B,EAAQhG,OAAOnD,MAHlC,4CAVoB,uBAAC,WAAD,wBAepBoJ,GAfoB,mCAgBpBC,KACC,CAACvC,IACJ,IAAMwC,GAAgB,mCAAG,WAAOZ,GAAP,8EACjBpF,GAASS,EAAAA,EAAAA,IAAIP,EAAAA,GAAI,QAASsD,GADT,UAEjByC,EAAAA,EAAAA,IAAUjG,GAAD,QAAC,UACXoF,GADU,IAEb/B,KAAM6C,GAAAA,CAAQd,EAAO/B,MAAQ+B,EAAOzC,MAAO,CAAEwD,OAAO,IACpDpC,QAAAA,KALqB,OAOvBuB,EAAAA,GAAAA,QAAc,4BAA6B,CACzCE,cAAc,EACdlG,MAAO,CACLmG,gBAAiBxJ,EAAAA,GAAAA,qBAGrByH,EAAS,gBAbc,2CAAH,sDAehB0C,IAAUC,EAAAA,EAAAA,UACd,iBAAO,CACLC,QAAS,CACP,CAAC,OAAQ,SAAU,YAAa,UAChC,CAAC,cACD,CAAC,CAAEC,OAAQ,GAAK,CAAEA,OAAQ,IAC1B,CAAC,CAAEC,KAAM,WAAa,CAAEA,KAAM,WAC9B,CAAC,CAAED,OAAQ,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAG,KAC9B,CAAC,OAAQ,UAEXE,cAAe,CACbC,OAAO,WAAD,wBAAE,WAAOpF,GAAP,gFACAqF,EAAe,IAAIC,UACZC,OAAO,QAASvF,GAFvB,SAGiBwF,GAAAA,CAAM,CAC3BC,OAAQ,OACRC,IA9FV,sEA+FUnH,KAAM8G,EACNM,QAAS,CACP,eAAgB,yBARd,cAGAC,EAHA,yBAWCA,EAASrH,KAAKA,KAAKmH,KAXpB,2CAAF,mDAAC,OAeX,IAEF,OAAKxD,GAEH,4BACE,SAAC,IAAD,CACEb,MAAM,cACNC,KAAK,qBAEP,kBAAMuE,SAAU3C,EAAawB,IAA7B,WACE,iBAAKhJ,UAAU,kCAAf,WACE,UAAC,IAAD,YACE,SAAC,IAAD,qBACA,SAAC,IAAD,CACEP,QAASA,EACTqB,YAAY,mBACZpB,KAAK,cAGT,UAAC,IAAD,YACE,SAAC,IAAD,oBACA,SAAC,IAAD,CACED,QAASA,EACTqB,YAAY,kBACZpB,KAAK,gBAIX,iBAAKM,UAAU,kCAAf,WACE,UAAC,IAAD,YACE,SAAC,IAAD,sBACA,iBAAKA,UAAU,iCAAf,WACE,SAAC,IAAD,CACEN,KAAK,SACLD,QAASA,EACTD,QAAS4K,OAAOtC,MAAiBuC,EAAAA,GAAAA,SACjC9J,MAAO8J,EAAAA,GAAAA,SAJT,uBAQA,SAAC,IAAD,CACE3K,KAAK,SACLD,QAASA,EACTD,QAAS4K,OAAOtC,MAAiBuC,EAAAA,GAAAA,QACjC9J,MAAO8J,EAAAA,GAAAA,QAJT,sBAQA,SAAC,IAAD,CACE3K,KAAK,SACLD,QAASA,EACTD,QAAS4K,OAAOtC,MAAiBuC,EAAAA,GAAAA,OACjC9J,MAAO8J,EAAAA,GAAAA,OAJT,2BAUJ,UAAC,IAAD,YACE,SAAC,IAAD,CAAOrK,WAAS,EAAhB,2BACA,gBAAKA,UAAU,OAAf,UACE,SAAC,IAAD,CACE+B,GAAIgG,GACJ1I,QAAS,kBAAMwE,EAAS,OAAQkE,gBAKxC,gBAAK/H,UAAU,QAAf,UACE,UAAC,IAAD,YACE,SAAC,IAAD,uBACA,gBAAKA,UAAU,4CAAf,UACE,SAAC,IAAD,CACEoJ,QAASA,GACTnK,MAAM,OACNe,UAAU,SACVO,MAAOwG,EACPhH,SAAUiH,YAKlB,iBAAKhH,UAAU,kCAAf,WACE,UAAC,IAAD,YACE,SAAC,IAAD,wBACA,SAAC,IAAD,CAAUc,YAAamG,GAAiB,2BAAxC,SACGe,GAAWK,OAAS,GACnBL,GAAWsC,KAAI,SAACC,GAAD,OACb,SAAC,IAAD,CAEElL,QAAS,WACP6H,EAAiBqD,EAAK7K,MACtBmE,EAAS,aAAc0G,EAAK3I,KAJhC,SAOG2I,EAAK7K,MAND6K,EAAK3I,aAWpB,UAAC,IAAD,YACE,SAAC,IAAD,qBACA,SAAC,IAAD,CACElC,KAAK,QACLM,UAAU,iBACViC,MAAOA,GACPD,SAAUgC,GACVjE,SAAUmE,GACVhC,kBAAmBA,YAIzB,gBAAKlC,UAAU,cAAf,UACE,SAAC,IAAD,CACEZ,KAAK,SACLY,UAAS,mBACN6H,KAAYd,GAAW,kCAE1BzH,QAASsI,GALX,iCA/GY","sources":["components/loading/LoadingSpinner.js","components/button/Button.js","components/checkbox/Radio.js","contexts/dropdownContext.js","components/dropdown/List.js","components/dropdown/Select.js","components/dropdown/Dropdown.js","components/dropdown/Option.js","components/form/Field.js","components/form/Input.js","components/form/Label.js","components/toggle/Toggle.js","components/upload/ImageUpload.js","hooks/useFetchData.js","hooks/useFirebaseImage.js","modules/dashboard/DashboardHeading.js","modules/post/PostUpdateNews.js"],"sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst LoadingStyle = styled.div`\r\n  display: inline-block;\r\n  width: ${(props) => props.size};\r\n  height: ${(props) => props.size};\r\n  border: ${(props) => props.border} solid #fff;\r\n  border-top: ${(props) => props.border} solid transparent;\r\n  display: flex;\r\n  align-items: center;\r\n  margin: 0 auto;\r\n  border-radius: 50%;\r\n  animation: spinner linear infinite 0.75s;\r\n  @keyframes spinner {\r\n    100% {\r\n      transform: rotate(360deg);\r\n    }\r\n  }\r\n`;\r\n\r\nconst LoadingSpinner = ({ size, border }) => {\r\n  return <LoadingStyle size={size} border={border}></LoadingStyle>;\r\n};\r\n\r\nexport default LoadingSpinner;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport LoadingSpinner from \"../loading/LoadingSpinner\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst ButtonStyle = styled.button`\r\n  margin-top: 16px;\r\n  background: ${(props) => props.theme.gradientColor};\r\n  width: 250px;\r\n  cursor: pointer;\r\n  padding: 18px 0;\r\n  color: white;\r\n  border-radius: 8px;\r\n  font-size: 20px;\r\n  transition: all ease-in 0.25s;\r\n  font-weight: 600;\r\n  &:disabled {\r\n    opacity: 0.6;\r\n    pointer-events: none;\r\n  }\r\n`;\r\n\r\nconst Button = ({\r\n  children,\r\n  type = \"button\",\r\n  onClick = () => {},\r\n  ...props\r\n}) => {\r\n  const { loading } = props;\r\n  return (\r\n    <ButtonStyle type={type} onClick={onClick} disabled={loading} {...props}>\r\n      {loading ? (\r\n        <LoadingSpinner size=\"30px\" border=\"4px\"></LoadingSpinner>\r\n      ) : (\r\n        children\r\n      )}\r\n    </ButtonStyle>\r\n  );\r\n};\r\n\r\nButton.propTypes = {\r\n  type: PropTypes.oneOf([\"button\", \"submit\"]),\r\n  onClick: PropTypes.func,\r\n  loading: PropTypes.bool,\r\n};\r\n\r\nexport default Button;\r\n","import React from \"react\";\r\nimport { useController } from \"react-hook-form\";\r\n\r\nconst Radio = ({ checked, children, control, name, ...rest }) => {\r\n  const { field } = useController({\r\n    control,\r\n    name,\r\n    defaultValue: \"\",\r\n  });\r\n  return (\r\n    <label>\r\n      <input\r\n        onChange={() => {}}\r\n        checked={checked}\r\n        type=\"radio\"\r\n        className=\"hidden-input\"\r\n        {...field}\r\n        {...rest}\r\n      />\r\n      <div className=\"flex items-center gap-x-3 font-medium cursor-pointer\">\r\n        <div\r\n          className={`w-7 h-7 rounded-full ${\r\n            checked ? \"bg-green-400\" : \"bg-gray-200\"\r\n          }`}\r\n        ></div>\r\n        <span>{children}</span>\r\n      </div>\r\n    </label>\r\n  );\r\n};\r\n\r\nexport default Radio;\r\n","import { createContext, useContext, useState } from \"react\";\r\n\r\nconst DropdownContext = createContext();\r\nfunction DropdownProvider({ ...props }) {\r\n  const [show, setShow] = useState(false);\r\n  const handleToggleDropdown = () => {\r\n    setShow(!show);\r\n  };\r\n  const value = { handleToggleDropdown, show, setShow };\r\n  return (\r\n    <DropdownContext.Provider value={value} {...props}>\r\n      {props.children}\r\n    </DropdownContext.Provider>\r\n  );\r\n}\r\n\r\nfunction useDropdown() {\r\n  const context = useContext(DropdownContext);\r\n  if (typeof context === \"undefined\")\r\n    throw new Error(\"useDropdown must be used within DropdownProvider\");\r\n  return context;\r\n}\r\n\r\nexport { useDropdown, DropdownProvider };\r\n","import React from \"react\";\r\nimport { useDropdown } from \"../../contexts/dropdownContext\";\r\n\r\nconst List = ({ children }) => {\r\n  const { show, setShow } = useDropdown();\r\n  return (\r\n    <>\r\n      {show && (\r\n        <div\r\n          className=\"absolute top-full left-0 w-full bg-white shadow-lg\"\r\n          onClick={() => setShow(false)}\r\n        >\r\n          {children}\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default List;\r\n","import React from \"react\";\r\nimport { useDropdown } from \"../../contexts/dropdownContext\";\r\n\r\nconst Select = ({ placeholder }) => {\r\n  const { show, handleToggleDropdown } = useDropdown();\r\n  return (\r\n    <div\r\n      className=\"flex items-center justify-between p-5 bg-[#E7ECF3] rounded cursor-pointer font-medium\"\r\n      onClick={handleToggleDropdown}\r\n    >\r\n      <span>{placeholder}</span>\r\n      <span>\r\n        {show ? (\r\n          <svg\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            className=\"h-5 w-5\"\r\n            fill=\"none\"\r\n            viewBox=\"0 0 24 24\"\r\n            stroke=\"currentColor\"\r\n            strokeWidth=\"2\"\r\n          >\r\n            <path\r\n              strokeLinecap=\"round\"\r\n              strokeLinejoin=\"round\"\r\n              d=\"M5 15l7-7 7 7\"\r\n            />\r\n          </svg>\r\n        ) : (\r\n          <svg\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            className=\"h-5 w-5\"\r\n            fill=\"none\"\r\n            viewBox=\"0 0 24 24\"\r\n            stroke=\"currentColor\"\r\n            strokeWidth=\"2\"\r\n          >\r\n            <path\r\n              strokeLinecap=\"round\"\r\n              strokeLinejoin=\"round\"\r\n              d=\"M19 9l-7 7-7-7\"\r\n            />\r\n          </svg>\r\n        )}\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Select;\r\n","import React, { useState } from \"react\";\r\nimport { DropdownProvider, useDropdown } from \"../../contexts/dropdownContext\";\r\nimport List from \"./List\";\r\nimport Select from \"./Select\";\r\n\r\nconst Dropdown = ({ placeholder, children, ...props }) => {\r\n  return (\r\n    <DropdownProvider {...props}>\r\n      <div className=\"relative inline-block w-full mt-3\">\r\n        <Select placeholder={placeholder}></Select>\r\n        <List>{children}</List>\r\n      </div>\r\n    </DropdownProvider>\r\n  );\r\n};\r\n\r\nexport default Dropdown;\r\n","import React from \"react\";\r\n\r\nconst Option = (props) => {\r\n  const { onClick } = props;\r\n  return (\r\n    <div\r\n      className=\"px-5 py-4 cursor-pointer flex items-center justify-between hover:bg-gray-100 select-none\"\r\n      onClick={onClick}\r\n    >\r\n      {props.children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Option;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst FieldStyle = styled.div`\r\n  text-align: left;\r\n  margin-bottom: 16px;\r\n  &:last-child {\r\n    margin-bottom: 0;\r\n  }\r\n`;\r\n\r\nconst Field = ({ children }) => {\r\n  return <FieldStyle className=\"form-group\">{children}</FieldStyle>;\r\n};\r\n\r\nexport default Field;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useController } from \"react-hook-form\";\r\n\r\nconst InputStyle = styled.div`\r\n  position: relative;\r\n  border-radius: 8px;\r\n  margin-top: 12px;\r\n  input {\r\n    border: 1px solid #ddd;\r\n    width: 100%;\r\n    border-radius: inherit;\r\n    padding: 16px;\r\n    outline: none;\r\n    transition: all ease-in 0.2s;\r\n    background-color: ${(props) => props.bgInput};\r\n    &:focus {\r\n      border: 1px solid ${(props) => props.theme.secondary};\r\n    }\r\n  }\r\n  input::placeholder {\r\n    color: #c4c4c4;\r\n  }\r\n`;\r\n\r\nconst Input = ({\r\n  children,\r\n  type = \"text\",\r\n  name,\r\n  control,\r\n  errorMessage,\r\n  ...props\r\n}) => {\r\n  const { field } = useController({\r\n    control,\r\n    name,\r\n  });\r\n  // console.log(errorMessage);\r\n  return (\r\n    <InputStyle>\r\n      <input type={type} id={name} {...field} {...props} />\r\n      {children}\r\n    </InputStyle>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst LabelStyle = styled.label`\r\n  color: #292d32;\r\n  font-weight: 600;\r\n  font-size: 16px;\r\n`;\r\n\r\nconst Label = ({ name, children }) => {\r\n  return <LabelStyle htmlFor={name}>{children}</LabelStyle>;\r\n};\r\n\r\nexport default Label;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Toggle = (props) => {\r\n  const { on, onClick, ...rest } = props;\r\n\r\n  return (\r\n    <label>\r\n      <input\r\n        type=\"checkbox\"\r\n        checked={on}\r\n        className=\"hidden-input\"\r\n        onChange={() => {}}\r\n        onClick={onClick}\r\n      />\r\n      <div\r\n        className={`inline-block w-[80px] h-[42px] relative cursor-pointer rounded-full p-1 transition-all ${\r\n          on ? \"bg-green-500\" : \"bg-gray-300\"\r\n        }`}\r\n        {...rest}\r\n      >\r\n        <span\r\n          className={`transition-all w-[34px] h-[34px] bg-white rounded-full inline-block ${\r\n            on ? \"translate-x-[38px]\" : \"\"\r\n          }`}\r\n        ></span>\r\n      </div>\r\n    </label>\r\n  );\r\n};\r\n\r\nToggle.propTypes = {\r\n  on: PropTypes.bool,\r\n  onClick: PropTypes.func,\r\n};\r\n\r\nexport default Toggle;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst ImageUpload = (props) => {\r\n  const {\r\n    name,\r\n    className = \"\",\r\n    progress = 0,\r\n    image = \"\",\r\n    handleDeleteImage,\r\n    loadingSize,\r\n    ...rest\r\n  } = props;\r\n  return (\r\n    <label\r\n      className={`cursor-pointer flex items-center justify-center bg-gray-100 border border-dashed w-full min-h-[200px] rounded-lg ${className} relative overflow-hidden group`}\r\n    >\r\n      <input type=\"file\" name={name} className=\"hidden-input\" {...rest} />\r\n      {!image && progress === 0 && (\r\n        <div className=\"flex flex-col items-center text-center pointer-events-none\">\r\n          <img\r\n            src=\"/add-image.png\"\r\n            alt=\"upload-img\"\r\n            className=\"max-w-[80px] mb-3\"\r\n          />\r\n          <p className=\"font-semibold\">Choose photo</p>\r\n        </div>\r\n      )}\r\n      {!image && progress !== 0 && (\r\n        <div\r\n          className={`border-8 bg-transparent w-14 h-14 rounded-full border-green-500 border-t-transparent animate-spin`}\r\n        ></div>\r\n      )}\r\n      {image && (\r\n        <>\r\n          <img src={image} className=\"w-full h-full object-cover\" alt=\"\" />\r\n          <button\r\n            className={`absolute bg-white opacity-0 w-14 h-14 rounded-full text-green-700 group-hover:opacity-80 transition-all duration-200`}\r\n            onClick={handleDeleteImage}\r\n            type=\"button\"\r\n          >\r\n            <svg\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              fill=\"none\"\r\n              viewBox=\"0 0 24 24\"\r\n              strokeWidth=\"1.5\"\r\n              stroke=\"currentColor\"\r\n              className=\"w-5 h-5 mx-auto\"\r\n            >\r\n              <path\r\n                strokeLinecap=\"round\"\r\n                strokeLinejoin=\"round\"\r\n                d=\"M14.74 9l-.346 9m-4.788 0L9.26 9m9.968-3.21c.342.052.682.107 1.022.166m-1.022-.165L18.16 19.673a2.25 2.25 0 01-2.244 2.077H8.084a2.25 2.25 0 01-2.244-2.077L4.772 5.79m14.456 0a48.108 48.108 0 00-3.478-.397m-12 .562c.34-.059.68-.114 1.022-.165m0 0a48.11 48.11 0 013.478-.397m7.5 0v-.916c0-1.18-.91-2.164-2.09-2.201a51.964 51.964 0 00-3.32 0c-1.18.037-2.09 1.022-2.09 2.201v.916m7.5 0a48.667 48.667 0 00-7.5 0\"\r\n              />\r\n            </svg>\r\n          </button>\r\n        </>\r\n      )}\r\n      {!image && (\r\n        <div\r\n          className=\"absolute w-10 h-1 bg-green-400 bottom-0 left-0 transition-all image-upload-progress\"\r\n          style={{\r\n            width: `${Math.ceil(progress)}%`,\r\n          }}\r\n        ></div>\r\n      )}\r\n    </label>\r\n  );\r\n};\r\n\r\nImageUpload.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  className: PropTypes.string,\r\n  progress: PropTypes.number,\r\n  image: PropTypes.string,\r\n  loadingSize: PropTypes.string,\r\n};\r\n\r\nexport default ImageUpload;\r\n","import { collection, getDocs, query } from \"firebase/firestore\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { db } from \"../firebases/firebaseConfig\";\r\n\r\nexport default function useFetchData(tableData, [...condition]) {\r\n  const [data, setData] = useState([]);\r\n  useEffect(() => {\r\n    async function getData() {\r\n      const colRef = collection(db, tableData);\r\n      const q = query(colRef, ...condition);\r\n      const querySnapshot = await getDocs(q);\r\n      let result = [];\r\n      querySnapshot.forEach((doc) => {\r\n        result.push({\r\n          id: doc.id,\r\n          ...doc.data(),\r\n        });\r\n      });\r\n      setData(result);\r\n    }\r\n    getData();\r\n  }, []);\r\n  return { data, setData };\r\n}\r\n","import { useState } from \"react\";\r\nimport {\r\n  getStorage,\r\n  ref,\r\n  uploadBytesResumable,\r\n  getDownloadURL,\r\n  deleteObject,\r\n} from \"firebase/storage\";\r\n\r\nexport default function useFirebaseImage(setValue, getValues) {\r\n  const [image, setImage] = useState(\"\");\r\n  const [progressPercent, setProgressPercent] = useState(0);\r\n\r\n  const processUploadImage = (file) => {\r\n    const storage = getStorage();\r\n    const storageRef = ref(storage, \"images/\" + file.name);\r\n    const uploadTask = uploadBytesResumable(storageRef, file);\r\n\r\n    uploadTask.on(\r\n      \"state_changed\",\r\n      (snapshot) => {\r\n        // Get task progress, including the number of bytes uploaded and the total number of bytes to be uploaded\r\n        const progress =\r\n          (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\r\n        setProgressPercent(progress);\r\n        switch (snapshot.state) {\r\n          case \"paused\":\r\n            console.log(\"Upload is paused\");\r\n            break;\r\n          case \"running\":\r\n            console.log(\"Upload is running\");\r\n            break;\r\n\r\n          default:\r\n            console.log(\"Nothing at all\");\r\n        }\r\n      },\r\n      (error) => {\r\n        console.log(error);\r\n      },\r\n      () => {\r\n        // Upload completed successfully, now we can get the download URL\r\n        getDownloadURL(uploadTask.snapshot.ref).then((downloadURL) => {\r\n          setImage(downloadURL);\r\n        });\r\n      }\r\n    );\r\n  };\r\n\r\n  const handleSelectImage = (e) => {\r\n    const files = e.target.files[0];\r\n    if (!files) return;\r\n    setValue(\"image_name\", files.name);\r\n    processUploadImage(files);\r\n  };\r\n\r\n  const handleDeleteImage = () => {\r\n    const storage = getStorage();\r\n\r\n    // Create a reference to the file to delete\r\n    const desertRef = ref(storage, \"images/\" + getValues(\"image_name\"));\r\n\r\n    // Delete the file\r\n    deleteObject(desertRef)\r\n      .then(() => {\r\n        // File deleted successfully\r\n        setImage(\"\");\r\n        setProgressPercent(0);\r\n      })\r\n      .catch((error) => {\r\n        // Uh-oh, an error occurred!\r\n      });\r\n  };\r\n\r\n  return {\r\n    image,\r\n    setImage,\r\n    progressPercent,\r\n    setProgressPercent,\r\n    handleSelectImage,\r\n    handleDeleteImage,\r\n  };\r\n}\r\n","import React from \"react\";\r\n\r\nconst DashboardHeading = ({ title = \"\", desc = \"\" }) => {\r\n  return (\r\n    <div className=\"mb-10\">\r\n      <h1 className=\"font-bold text-2xl mb-3\">{title}</h1>\r\n      <p className=\"text-base\">{desc}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DashboardHeading;\r\n","import React from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useNavigate, useSearchParams } from \"react-router-dom\";\r\nimport DashboardHeading from \"../dashboard/DashboardHeading\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as Yup from \"yup\";\r\nimport Field from \"../../components/form/Field\";\r\nimport Label from \"../../components/form/Label\";\r\nimport Input from \"../../components/form/Input\";\r\nimport Radio from \"../../components/checkbox/Radio\";\r\nimport { postStatus, theme } from \"../../utils/constants\";\r\nimport Toggle from \"../../components/toggle/Toggle\";\r\nimport ImageUpload from \"../../components/upload/ImageUpload\";\r\nimport Button from \"../../components/button/Button\";\r\nimport { collection, doc, getDoc, updateDoc, where } from \"firebase/firestore\";\r\nimport { db } from \"../../firebases/firebaseConfig\";\r\nimport ReactQuill, { Quill } from \"react-quill\";\r\nimport ImageUploader from \"quill-image-uploader\";\r\nimport \"react-quill/dist/quill.snow.css\";\r\nimport Dropdown from \"../../components/dropdown/Dropdown\";\r\nimport useFetchData from \"../../hooks/useFetchData\";\r\nimport Option from \"../../components/dropdown/Option\";\r\nimport useFirebaseImage from \"../../hooks/useFirebaseImage\";\r\nimport { toast } from \"react-toastify\";\r\nimport slugify from \"slugify\";\r\nimport { useMemo } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nQuill.register(\"modules/imageUploader\", ImageUploader);\r\n\r\nconst schema = Yup.object({\r\n  title: Yup.string()\r\n    .required(\"Please enter post title\")\r\n    .min(10, \"Please enter the minimum 10 character\"),\r\n  categoryID: Yup.string().required(\"Please choose a category for the post\"),\r\n  image: Yup.string().required(\"Please select a present image for post\"),\r\n  status: Yup.number(),\r\n  slug: Yup.string(),\r\n  hot: Yup.boolean(),\r\n});\r\n\r\nconst imgbbApi =\r\n  \"https://api.imgbb.com/1/upload?key=f8e815dfbd5fbbe3997abbd65dfa80cf\";\r\n\r\nconst PostUpdateNews = () => {\r\n  const [params] = useSearchParams();\r\n  const postID = params.get(\"id\");\r\n  const navigate = useNavigate();\r\n  const [postInfo, setPostInfo] = React.useState({});\r\n  const [content, setContent] = React.useState(\"\");\r\n  const [valueSelected, setValueSelected] = React.useState();\r\n  const {\r\n    control,\r\n    watch,\r\n    setValue,\r\n    handleSubmit,\r\n    getValues,\r\n    reset,\r\n    formState: { errors, isSubmitting, isDirty },\r\n  } = useForm({\r\n    mode: \"onSubmit\",\r\n    resolver: yupResolver(schema),\r\n  });\r\n  const {\r\n    image,\r\n    setImage,\r\n    progressPercent,\r\n    setProgressPercent,\r\n    handleSelectImage,\r\n    handleDeleteImage,\r\n  } = useFirebaseImage(setValue, getValues);\r\n  const watchStatus = watch(\"status\");\r\n  const watchHot = watch(\"hot\");\r\n  const { data: categories } = useFetchData(\"category\", [\r\n    where(\"status\", \"==\", 1),\r\n  ]);\r\n  React.useEffect(() => {\r\n    const listError = Object.values(errors);\r\n    if (listError.length > 0) {\r\n      toast.error(listError[0].message, {\r\n        pauseOnHover: false,\r\n        style: {\r\n          backgroundColor: theme.toastErrorColor,\r\n        },\r\n      });\r\n    }\r\n  }, [errors]);\r\n  React.useEffect(() => {\r\n    async function getPostInfo() {\r\n      if (!postID) return;\r\n      const colRef = doc(db, \"posts\", postID);\r\n      const colSnap = await getDoc(colRef);\r\n      setPostInfo(colSnap.data());\r\n      setImage(colSnap.data().image);\r\n      setContent(colSnap.data().content);\r\n      reset(colSnap.data());\r\n    }\r\n    async function getCategory() {\r\n      const docRef = doc(db, \"category\", postInfo.categoryID);\r\n      const docSnap = await getDoc(docRef);\r\n      setValueSelected(docSnap.data().name);\r\n    }\r\n    getPostInfo();\r\n    getCategory();\r\n  }, [postID]);\r\n  const handleUpdatePost = async (values) => {\r\n    const colRef = doc(db, \"posts\", postID);\r\n    await updateDoc(colRef, {\r\n      ...values,\r\n      slug: slugify(values.slug || values.title, { lower: true }),\r\n      content,\r\n    });\r\n    toast.success(\"Update post successfully!\", {\r\n      pauseOnHover: false,\r\n      style: {\r\n        backgroundColor: theme.toastSuccessColor,\r\n      },\r\n    });\r\n    navigate(\"/manage/post\");\r\n  };\r\n  const modules = useMemo(\r\n    () => ({\r\n      toolbar: [\r\n        [\"bold\", \"italic\", \"underline\", \"strike\"],\r\n        [\"blockquote\"],\r\n        [{ header: 1 }, { header: 2 }],\r\n        [{ list: \"ordered\" }, { list: \"bullet\" }],\r\n        [{ header: [1, 2, 3, 4, 5, 6, false] }],\r\n        [\"link\", \"image\"],\r\n      ],\r\n      imageUploader: {\r\n        upload: async (file) => {\r\n          const bodyFormData = new FormData();\r\n          bodyFormData.append(\"image\", file);\r\n          const response = await axios({\r\n            method: \"post\",\r\n            url: imgbbApi,\r\n            data: bodyFormData,\r\n            headers: {\r\n              \"Content-Type\": \"multipart/form-data\",\r\n            },\r\n          });\r\n          return response.data.data.url;\r\n        },\r\n      },\r\n    }),\r\n    []\r\n  );\r\n  if (!postID) return null;\r\n  return (\r\n    <div>\r\n      <DashboardHeading\r\n        title=\"Update Post\"\r\n        desc=\"Update new post\"\r\n      ></DashboardHeading>\r\n      <form onSubmit={handleSubmit(handleUpdatePost)}>\r\n        <div className=\"grid grid-cols-2 gap-x-10 mb-10\">\r\n          <Field>\r\n            <Label>Title</Label>\r\n            <Input\r\n              control={control}\r\n              placeholder=\"Enter your title\"\r\n              name=\"title\"\r\n            ></Input>\r\n          </Field>\r\n          <Field>\r\n            <Label>Slug</Label>\r\n            <Input\r\n              control={control}\r\n              placeholder=\"Enter your slug\"\r\n              name=\"slug\"\r\n            ></Input>\r\n          </Field>\r\n        </div>\r\n        <div className=\"grid grid-cols-2 gap-x-10 mb-10\">\r\n          <Field>\r\n            <Label>Status</Label>\r\n            <div className=\"flex items-center gap-x-5 mt-3\">\r\n              <Radio\r\n                name=\"status\"\r\n                control={control}\r\n                checked={Number(watchStatus) === postStatus.APPROVED}\r\n                value={postStatus.APPROVED}\r\n              >\r\n                Approved\r\n              </Radio>\r\n              <Radio\r\n                name=\"status\"\r\n                control={control}\r\n                checked={Number(watchStatus) === postStatus.PENDING}\r\n                value={postStatus.PENDING}\r\n              >\r\n                Pending\r\n              </Radio>\r\n              <Radio\r\n                name=\"status\"\r\n                control={control}\r\n                checked={Number(watchStatus) === postStatus.REJECT}\r\n                value={postStatus.REJECT}\r\n              >\r\n                Reject\r\n              </Radio>\r\n            </div>\r\n          </Field>\r\n          <Field>\r\n            <Label className>Feature post</Label>\r\n            <div className=\"mt-3\">\r\n              <Toggle\r\n                on={watchHot}\r\n                onClick={() => setValue(\"hot\", !watchHot)}\r\n              ></Toggle>\r\n            </div>\r\n          </Field>\r\n        </div>\r\n        <div className=\"mb-10\">\r\n          <Field>\r\n            <Label>Content</Label>\r\n            <div className=\"w-full h-[500px] mt-3 pb-10 entry-content\">\r\n              <ReactQuill\r\n                modules={modules}\r\n                theme=\"snow\"\r\n                className=\"h-full\"\r\n                value={content}\r\n                onChange={setContent}\r\n              />\r\n            </div>\r\n          </Field>\r\n        </div>\r\n        <div className=\"grid grid-cols-2 gap-x-10 mb-10\">\r\n          <Field>\r\n            <Label>Category</Label>\r\n            <Dropdown placeholder={valueSelected || \"Please select a category\"}>\r\n              {categories.length > 0 &&\r\n                categories.map((item) => (\r\n                  <Option\r\n                    key={item.id}\r\n                    onClick={() => {\r\n                      setValueSelected(item.name);\r\n                      setValue(\"categoryID\", item.id);\r\n                    }}\r\n                  >\r\n                    {item.name}\r\n                  </Option>\r\n                ))}\r\n            </Dropdown>\r\n          </Field>\r\n          <Field>\r\n            <Label>Image</Label>\r\n            <ImageUpload\r\n              name=\"image\"\r\n              className=\"mt-3 h-[250px]\"\r\n              image={image}\r\n              progress={progressPercent}\r\n              onChange={handleSelectImage}\r\n              handleDeleteImage={handleDeleteImage}\r\n            ></ImageUpload>\r\n          </Field>\r\n        </div>\r\n        <div className=\"text-center\">\r\n          <Button\r\n            type=\"submit\"\r\n            className={`mx-auto ${\r\n              !isDirty && !content && \"pointer-events-none opacity-50\"\r\n            }`}\r\n            loading={isSubmitting}\r\n          >\r\n            Update post\r\n          </Button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PostUpdateNews;\r\n"],"names":["LoadingStyle","styled","props","size","border","ButtonStyle","theme","gradientColor","children","type","onClick","loading","disabled","checked","control","name","rest","field","useController","defaultValue","onChange","className","DropdownContext","createContext","DropdownProvider","useState","show","setShow","value","handleToggleDropdown","Provider","useDropdown","context","useContext","Error","placeholder","xmlns","fill","viewBox","stroke","strokeWidth","strokeLinecap","strokeLinejoin","d","FieldStyle","InputStyle","bgInput","secondary","errorMessage","id","LabelStyle","htmlFor","on","progress","image","handleDeleteImage","loadingSize","src","alt","style","width","Math","ceil","useFetchData","tableData","condition","data","setData","useEffect","colRef","collection","db","q","query","getDocs","querySnapshot","result","forEach","doc","push","getData","useFirebaseImage","setValue","getValues","setImage","progressPercent","setProgressPercent","handleSelectImage","e","files","target","file","storage","getStorage","storageRef","ref","uploadTask","uploadBytesResumable","snapshot","bytesTransferred","totalBytes","state","console","log","error","getDownloadURL","then","downloadURL","processUploadImage","desertRef","deleteObject","catch","title","desc","Quill","ImageUploader","schema","Yup","required","min","categoryID","status","slug","hot","useSearchParams","postID","get","navigate","useNavigate","React","postInfo","setPostInfo","content","setContent","valueSelected","setValueSelected","useForm","mode","resolver","yupResolver","watch","handleSubmit","reset","formState","errors","isSubmitting","isDirty","watchStatus","watchHot","categories","where","listError","Object","values","length","toast","message","pauseOnHover","backgroundColor","getDoc","colSnap","docRef","docSnap","getPostInfo","getCategory","handleUpdatePost","updateDoc","slugify","lower","modules","useMemo","toolbar","header","list","imageUploader","upload","bodyFormData","FormData","append","axios","method","url","headers","response","onSubmit","Number","postStatus","map","item"],"sourceRoot":""}