{"version":3,"file":"static/js/713.27f54c75.chunk.js","mappings":"6PAGMA,EAAeC,EAAAA,GAAAA,IAAH,qWAEP,SAACC,GAAD,OAAWA,EAAMC,QAChB,SAACD,GAAD,OAAWA,EAAMC,QACjB,SAACD,GAAD,OAAWA,EAAME,UACb,SAACF,GAAD,OAAWA,EAAME,UAiBjC,EAJuB,SAAC,GAAsB,IAApBD,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,OAC9B,OAAO,SAACJ,EAAD,CAAcG,KAAMA,EAAMC,OAAQA,K,gCCjBrCC,EAAcJ,EAAAA,GAAAA,OAAH,gTAED,SAACC,GAAD,OAAWA,EAAMI,MAAMC,iBAuCvC,EAxBe,SAAC,GAKT,IAJLC,EAII,EAJJA,SAII,IAHJC,KAAAA,OAGI,MAHG,SAGH,MAFJC,QAAAA,OAEI,MAFM,aAEN,EADDR,GACC,YACIS,EAAYT,EAAZS,QACR,OACE,SAACN,GAAD,gBAAaI,KAAMA,EAAMC,QAASA,EAASE,SAAUD,GAAaT,GAAlE,aACGS,GACC,SAAC,EAAD,CAAgBR,KAAK,OAAOC,OAAO,QAEnCI,O,iEC/BFK,EAAaZ,EAAAA,GAAAA,IAAH,mHAYhB,IAJc,SAAC,GAAkB,IAAhBO,EAAe,EAAfA,SACf,OAAO,SAACK,EAAD,CAAYC,UAAU,aAAtB,SAAoCN,M,qJCRvCO,EAAad,EAAAA,GAAAA,IAAH,oYAWQ,SAACC,GAAD,OAAWA,EAAMc,WAEf,SAACd,GAAD,OAAWA,EAAMI,MAAMW,aA6BjD,IArBc,SAAC,GAOR,IANLT,EAMI,EANJA,SAMI,IALJC,KAAAA,OAKI,MALG,OAKH,EAJJS,EAII,EAJJA,KACAC,EAGI,EAHJA,QAEGjB,GACC,EAFJkB,cAEI,aACIC,GAAUC,EAAAA,EAAAA,IAAc,CAC9BH,QAAAA,EACAD,KAAAA,IAFMG,MAKR,OACE,UAACN,EAAD,YACE,kCAAON,KAAMA,EAAMc,GAAIL,GAAUG,GAAWnB,IAC3CM,O,iECtCDgB,EAAavB,EAAAA,GAAAA,MAAH,oFAUhB,IAJc,SAAC,GAAwB,IAAtBiB,EAAqB,EAArBA,KAAMV,EAAe,EAAfA,SACrB,OAAO,SAACgB,EAAD,CAAYC,QAASP,EAArB,SAA4BV,M,4GCP/BkB,EAAYzB,EAAAA,GAAAA,IAAH,+NAkDf,EApCqB,SAAC,GAAiB,IAAfS,EAAc,EAAdA,QACtB,OACE,SAACgB,EAAD,WACE,iBACEhB,QAASA,EACTiB,MAAM,KACNC,OAAO,KACPC,QAAQ,YACRC,KAAK,OACLC,MAAM,6BANR,WAQE,iBACEC,EAAE,sYACFC,OAAO,UACPC,YAAY,MACZC,cAAc,WAEhB,iBACEH,EAAE,kZACFC,OAAO,UACPC,YAAY,MACZC,cAAc,QACdC,eAAe,WAEjB,iBACEJ,EAAE,kCACFC,OAAO,UACPC,YAAY,MACZC,cAAc,QACdC,eAAe,gBC3CnBV,EAAYzB,EAAAA,GAAAA,IAAH,+NA4Cf,EA9BoB,SAAC,GAAiB,IAAfS,EAAc,EAAdA,QACrB,OACE,SAAC,EAAD,WACE,iBACEA,QAASA,EACTiB,MAAM,KACNC,OAAO,KACPC,QAAQ,YACRC,KAAK,OACLC,MAAM,6BANR,WAQE,iBACEC,EAAE,0VACFC,OAAO,UACPC,YAAY,MACZC,cAAc,QACdC,eAAe,WAEjB,iBACEJ,EAAE,kLACFC,OAAO,UACPC,YAAY,MACZC,cAAc,QACdC,eAAe,gB,UChBzB,EAnBuB,SAAC,GAAiB,IAAfjB,EAAc,EAAdA,QACxB,EAAoCkB,EAAAA,UAAe,GAAnD,eAAOC,EAAP,KAAmBC,EAAnB,KACA,OAAKpB,GAEH,SAACqB,EAAA,EAAD,CACEC,YAAY,6BACZvB,KAAK,WACLC,QAASA,EACTV,KAAM6B,EAAa,WAAa,OAJlC,SAMGA,GACC,SAAC,EAAD,CAAc5B,QAAS,kBAAM6B,GAAc,OAE3C,SAAC,EAAD,CAAa7B,QAAS,kBAAM6B,GAAc,QAX3B,O,iECJjBG,EAAYzC,EAAAA,GAAAA,IAAH,+eAaF,SAACC,GAAD,OAAWA,EAAMI,MAAMW,aAUrB,SAACf,GAAD,OAAWA,EAAMI,MAAMW,aAmBtC,IAZiB,SAAC,GAAkB,IAAhBT,EAAe,EAAfA,SAClB,OACE,gBAAKM,UAAU,aAAf,UACE,UAAC4B,EAAD,YACE,gBAAKC,IAAI,kBAAkBC,IAAI,GAAG9B,UAAU,UAC5C,eAAIA,UAAU,UAAd,6BACCN,S,kQCrBHqC,EAASC,EAAAA,GAAW,CACxBC,SAAUD,EAAAA,KACPE,SAAS,4BACTC,IAAI,EAAG,4CACVC,MAAOJ,EAAAA,KACJE,SAAS,4BACTE,MAAM,yBACTC,SAAUL,EAAAA,KACPE,SAAS,4BACTC,IAAI,EAAG,gDACPG,QACC,uDACA,0EA2FN,UAvFe,WACb,OAIIC,EAAAA,EAAAA,IAAQ,CACVC,KAAM,WACNC,UAAUC,EAAAA,EAAAA,GAAYX,KALtB1B,EADF,EACEA,QACAsC,EAFF,EAEEA,aAFF,IAGEC,UAAaC,EAHf,EAGeA,OAAQC,EAHvB,EAGuBA,aAAcC,EAHrC,EAGqCA,QAK7BC,GAAaC,EAAAA,EAAAA,KAAbD,SACFE,GAAWC,EAAAA,EAAAA,MACjB5B,EAAAA,WAAgB,WACd6B,SAASC,MAAQ,UACjB,OAAIL,QAAJ,IAAIA,GAAAA,EAAUZ,OAAOc,EAAS,OAC7B,IACH3B,EAAAA,WAAgB,WACd,IAAM+B,EAAYC,OAAOC,OAAOX,GAC5BS,EAAUG,OAAS,GACrBC,EAAAA,GAAAA,MAAYJ,EAAU,GAAGK,QAAS,CAChCC,cAAc,EACdC,MAAO,CACLC,gBAAiBtE,EAAAA,GAAAA,qBAItB,CAACqD,IACJ,IAAMkB,EAAc,mCAAG,WAAOP,GAAP,4EAChBT,EADgB,wDAEfiB,GAFe,UAEIR,GAFJ,UAGfS,EAAAA,EAAAA,IAA+BC,EAAAA,EAAMV,EAAOpB,MAAOoB,EAAOnB,UAH3C,OAIf8B,GAASC,EAAAA,EAAAA,IAAWC,EAAAA,GAAI,UAC9BC,EAAAA,EAAAA,IAAOH,GAAD,QAAC,UACFH,GADC,IAEJO,OAAQ,uBACRC,OAAQC,EAAAA,GAAAA,OACRC,KAAMC,EAAAA,GAAAA,KACNC,UAAUC,EAAAA,EAAAA,SAEZnB,EAAAA,GAAAA,QAAc,uBAAwB,CACpCE,cAAc,EACdC,MAAO,CACLC,gBAAiBtE,EAAAA,GAAAA,qBAGrB0D,EAAS,KAlBY,2CAAH,sDAoBpB,OACE,SAAC,IAAD,WACE,kBACElD,UAAU,OACV8E,SAAUnC,EAAaoB,GACvBgB,aAAa,MAHf,WAKE,UAAC,IAAD,YACE,SAAC,IAAD,CAAO3E,KAAK,WAAZ,uBACA,SAAC,IAAD,CACEuB,YAAY,6BACZvB,KAAK,WACLC,QAASA,QAGb,UAAC,IAAD,YACE,SAAC,IAAD,CAAOD,KAAK,QAAZ,4BACA,SAAC,IAAD,CACEuB,YAAY,0BACZvB,KAAK,QACLC,QAASA,QAGb,UAAC,IAAD,YACE,SAAC,IAAD,CAAOD,KAAK,WAAZ,uBACA,SAAC,IAAD,CAAgBC,QAASA,QAE3B,SAAC,IAAD,CAAQV,KAAK,SAASE,QAASiD,EAA/B,sBAGA,eAAG9C,UAAU,UAAb,+CACqC,KACnC,SAAC,KAAD,CAAMgF,GAAI,SAAUhF,UAAU,eAA9B","sources":["components/loading/LoadingSpinner.js","components/button/Button.js","components/form/Field.js","components/form/Input.js","components/form/Label.js","components/icon/IconEyeClose.js","components/icon/IconEyeOpen.js","components/form/TogglePassword.js","pages/AuthPage.js","pages/SignUp.js"],"sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst LoadingStyle = styled.div`\r\n  display: inline-block;\r\n  width: ${(props) => props.size};\r\n  height: ${(props) => props.size};\r\n  border: ${(props) => props.border} solid #fff;\r\n  border-top: ${(props) => props.border} solid transparent;\r\n  display: flex;\r\n  align-items: center;\r\n  margin: 0 auto;\r\n  border-radius: 50%;\r\n  animation: spinner linear infinite 0.75s;\r\n  @keyframes spinner {\r\n    100% {\r\n      transform: rotate(360deg);\r\n    }\r\n  }\r\n`;\r\n\r\nconst LoadingSpinner = ({ size, border }) => {\r\n  return <LoadingStyle size={size} border={border}></LoadingStyle>;\r\n};\r\n\r\nexport default LoadingSpinner;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport LoadingSpinner from \"../loading/LoadingSpinner\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst ButtonStyle = styled.button`\r\n  margin-top: 16px;\r\n  background: ${(props) => props.theme.gradientColor};\r\n  width: 250px;\r\n  cursor: pointer;\r\n  padding: 18px 0;\r\n  color: white;\r\n  border-radius: 8px;\r\n  font-size: 20px;\r\n  transition: all ease-in 0.25s;\r\n  font-weight: 600;\r\n  &:disabled {\r\n    opacity: 0.6;\r\n    pointer-events: none;\r\n  }\r\n`;\r\n\r\nconst Button = ({\r\n  children,\r\n  type = \"button\",\r\n  onClick = () => {},\r\n  ...props\r\n}) => {\r\n  const { loading } = props;\r\n  return (\r\n    <ButtonStyle type={type} onClick={onClick} disabled={loading} {...props}>\r\n      {loading ? (\r\n        <LoadingSpinner size=\"30px\" border=\"4px\"></LoadingSpinner>\r\n      ) : (\r\n        children\r\n      )}\r\n    </ButtonStyle>\r\n  );\r\n};\r\n\r\nButton.propTypes = {\r\n  type: PropTypes.oneOf([\"button\", \"submit\"]),\r\n  onClick: PropTypes.func,\r\n  loading: PropTypes.bool,\r\n};\r\n\r\nexport default Button;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst FieldStyle = styled.div`\r\n  text-align: left;\r\n  margin-bottom: 16px;\r\n  &:last-child {\r\n    margin-bottom: 0;\r\n  }\r\n`;\r\n\r\nconst Field = ({ children }) => {\r\n  return <FieldStyle className=\"form-group\">{children}</FieldStyle>;\r\n};\r\n\r\nexport default Field;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useController } from \"react-hook-form\";\r\n\r\nconst InputStyle = styled.div`\r\n  position: relative;\r\n  border-radius: 8px;\r\n  margin-top: 12px;\r\n  input {\r\n    border: 1px solid #ddd;\r\n    width: 100%;\r\n    border-radius: inherit;\r\n    padding: 16px;\r\n    outline: none;\r\n    transition: all ease-in 0.2s;\r\n    background-color: ${(props) => props.bgInput};\r\n    &:focus {\r\n      border: 1px solid ${(props) => props.theme.secondary};\r\n    }\r\n  }\r\n  input::placeholder {\r\n    color: #c4c4c4;\r\n  }\r\n`;\r\n\r\nconst Input = ({\r\n  children,\r\n  type = \"text\",\r\n  name,\r\n  control,\r\n  errorMessage,\r\n  ...props\r\n}) => {\r\n  const { field } = useController({\r\n    control,\r\n    name,\r\n  });\r\n  // console.log(errorMessage);\r\n  return (\r\n    <InputStyle>\r\n      <input type={type} id={name} {...field} {...props} />\r\n      {children}\r\n    </InputStyle>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst LabelStyle = styled.label`\r\n  color: #292d32;\r\n  font-weight: 600;\r\n  font-size: 16px;\r\n`;\r\n\r\nconst Label = ({ name, children }) => {\r\n  return <LabelStyle htmlFor={name}>{children}</LabelStyle>;\r\n};\r\n\r\nexport default Label;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst IconStyle = styled.div`\r\n  position: absolute;\r\n  right: 0;\r\n  bottom: 0;\r\n  height: 100%;\r\n  background-color: transparent;\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 0 16px;\r\n  svg {\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst IconEyeClose = ({ onClick }) => {\r\n  return (\r\n    <IconStyle>\r\n      <svg\r\n        onClick={onClick}\r\n        width=\"22\"\r\n        height=\"20\"\r\n        viewBox=\"0 0 22 20\"\r\n        fill=\"none\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n      >\r\n        <path\r\n          d=\"M13.5356 8.46454C13.7677 8.69669 13.9519 8.97229 14.0775 9.27561C14.2032 9.57892 14.2678 9.90401 14.2678 10.2323C14.2678 10.5606 14.2031 10.8857 14.0775 11.189C13.9518 11.4923 13.7677 11.7679 13.5355 12.0001C13.3034 12.2322 13.0278 12.4164 12.7245 12.542C12.4211 12.6676 12.0961 12.7323 11.7678 12.7323C11.4394 12.7323 11.1144 12.6676 10.811 12.5419C10.5077 12.4163 10.2321 12.2322 10 12\"\r\n          stroke=\"#999999\"\r\n          strokeWidth=\"1.5\"\r\n          strokeLinecap=\"round\"\r\n        />\r\n        <path\r\n          d=\"M11 4C7.04003 4 4.01115 6.27449 1.4755 9.39738C1.19014 9.74883 1.19009 10.2511 1.47544 10.6025C2.18711 11.479 2.93763 12.2887 3.73669 13M6.74043 15.0348C8.03446 15.6495 9.44549 16 11 16C11.2884 16 11.5719 15.9879 11.8507 15.9643L12.2607 15.9122M15.7029 5.18844C17.5178 6.15443 19.0991 7.64187 20.5245 9.39741C20.8099 9.74885 20.8099 10.2512 20.5245 10.6026C19.1774 12.2617 17.6911 13.6813 16 14.6476\"\r\n          stroke=\"#999999\"\r\n          strokeWidth=\"1.4\"\r\n          strokeLinecap=\"round\"\r\n          strokeLinejoin=\"round\"\r\n        />\r\n        <path\r\n          d=\"M19.1217 1.11547L1.9998 18.9996\"\r\n          stroke=\"#999999\"\r\n          strokeWidth=\"1.5\"\r\n          strokeLinecap=\"round\"\r\n          strokeLinejoin=\"round\"\r\n        />\r\n      </svg>\r\n    </IconStyle>\r\n  );\r\n};\r\n\r\nexport default IconEyeClose;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst IconStyle = styled.div`\r\n  position: absolute;\r\n  right: 0;\r\n  bottom: 0;\r\n  height: 100%;\r\n  background-color: transparent;\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 0 16px;\r\n  svg {\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst IconEyeOpen = ({ onClick }) => {\r\n  return (\r\n    <IconStyle>\r\n      <svg\r\n        onClick={onClick}\r\n        width=\"22\"\r\n        height=\"14\"\r\n        viewBox=\"0 0 22 14\"\r\n        fill=\"none\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n      >\r\n        <path\r\n          d=\"M14.5 1.62156C16.8312 2.50868 18.7928 4.24569 20.5245 6.37837C20.8098 6.72982 20.8099 7.23217 20.5245 7.58361C17.9889 10.7065 14.96 12.981 11 12.981C7.04003 12.981 4.01115 10.7065 1.4755 7.58361C1.19014 7.23216 1.19016 6.72981 1.47551 6.37837C3.69735 3.64197 6.29789 1.55697 9.5717 1.0828C9.75303 1.05654 9.93641 1.03522 10.1219 1.019L10.561 1\"\r\n          stroke=\"#999999\"\r\n          strokeWidth=\"1.4\"\r\n          strokeLinecap=\"round\"\r\n          strokeLinejoin=\"round\"\r\n        />\r\n        <path\r\n          d=\"M13.5 6.98096C13.5 8.36167 12.3807 9.48096 11 9.48096C9.61929 9.48096 8.5 8.36167 8.5 6.98096C8.5 5.60025 9.61929 4.48096 11 4.48096C12.3807 4.48096 13.5 5.60025 13.5 6.98096Z\"\r\n          stroke=\"#999999\"\r\n          strokeWidth=\"1.4\"\r\n          strokeLinecap=\"round\"\r\n          strokeLinejoin=\"round\"\r\n        />\r\n      </svg>\r\n    </IconStyle>\r\n  );\r\n};\r\n\r\nexport default IconEyeOpen;\r\n","import React from \"react\";\r\nimport IconEyeClose from \"../icon/IconEyeClose\";\r\nimport IconEyeOpen from \"../icon/IconEyeOpen\";\r\nimport Input from \"./Input\";\r\n\r\nconst TogglePassword = ({ control }) => {\r\n  const [isPassword, setIsPassword] = React.useState(true);\r\n  if (!control) return null;\r\n  return (\r\n    <Input\r\n      placeholder=\"Please enter your password\"\r\n      name=\"password\"\r\n      control={control}\r\n      type={isPassword ? \"password\" : \"text\"}\r\n    >\r\n      {isPassword ? (\r\n        <IconEyeClose onClick={() => setIsPassword(false)}></IconEyeClose>\r\n      ) : (\r\n        <IconEyeOpen onClick={() => setIsPassword(true)}></IconEyeOpen>\r\n      )}\r\n    </Input>\r\n  );\r\n};\r\n\r\nexport default TogglePassword;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst AuthStyle = styled.div`\r\n  max-width: 600px;\r\n  margin: 0 auto 20px;\r\n  padding-top: 40px;\r\n  text-align: center;\r\n  .logo {\r\n    width: 100px;\r\n    margin: 0 auto;\r\n  }\r\n  .heading {\r\n    font-weight: 600;\r\n    font-size: 32px;\r\n    line-height: 60px;\r\n    color: ${(props) => props.theme.secondary};\r\n    margin-top: 20px;\r\n  }\r\n  .form {\r\n    margin-top: 28px;\r\n  }\r\n  .support {\r\n    margin-top: 16px;\r\n    font-size: 15px;\r\n    &-link {\r\n      color: ${(props) => props.theme.secondary};\r\n      cursor: pointer;\r\n      text-decoration: none;\r\n    }\r\n  }\r\n`;\r\n\r\nconst AuthPage = ({ children }) => {\r\n  return (\r\n    <div className=\"container \">\r\n      <AuthStyle>\r\n        <img src=\"monkey-logo.png\" alt=\"\" className=\"logo\" />\r\n        <h1 className=\"heading\">Monkey Blogging</h1>\r\n        {children}\r\n      </AuthStyle>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AuthPage;\r\n","import React from \"react\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as Yup from \"yup\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { toast } from \"react-toastify\";\r\nimport { createUserWithEmailAndPassword } from \"firebase/auth\";\r\nimport { db, auth } from \"../firebases/firebaseConfig\";\r\nimport Input from \"../components/form/Input\";\r\nimport Label from \"../components/form/Label\";\r\nimport Field from \"../components/form/Field\";\r\nimport Button from \"../components/button/Button\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { addDoc, collection, serverTimestamp, where } from \"firebase/firestore\";\r\nimport AuthPage from \"./AuthPage\";\r\nimport { useAuth } from \"../contexts/authContext\";\r\nimport TogglePassword from \"../components/form/TogglePassword\";\r\nimport { theme, userRole, userStatus } from \"../utils/constants\";\r\n\r\nconst schema = Yup.object({\r\n  fullName: Yup.string()\r\n    .required(\"This is a required field\")\r\n    .min(4, \"Your name must be 4 characters or little\"),\r\n  email: Yup.string()\r\n    .required(\"This is a required field\")\r\n    .email(\"This email is invalid\"),\r\n  password: Yup.string()\r\n    .required(\"This is a required field\")\r\n    .min(8, \"Your password must be 8 characters or little\")\r\n    .matches(\r\n      /^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])([a-zA-Z0-9]{8,})$/,\r\n      \"Your password must be at least 1 uppercase, 1 lowercase and 1 number\"\r\n    ),\r\n});\r\n\r\nconst SignUp = () => {\r\n  const {\r\n    control,\r\n    handleSubmit,\r\n    formState: { errors, isSubmitting, isValid },\r\n  } = useForm({\r\n    mode: \"onSubmit\",\r\n    resolver: yupResolver(schema),\r\n  });\r\n  const { userInfo } = useAuth();\r\n  const navigate = useNavigate();\r\n  React.useEffect(() => {\r\n    document.title = \"Sign Up\";\r\n    if (userInfo?.email) navigate(\"/\");\r\n  }, []);\r\n  React.useEffect(() => {\r\n    const listError = Object.values(errors);\r\n    if (listError.length > 0) {\r\n      toast.error(listError[0].message, {\r\n        pauseOnHover: false,\r\n        style: {\r\n          backgroundColor: theme.toastErrorColor,\r\n        },\r\n      });\r\n    }\r\n  }, [errors]);\r\n  const handleRegister = async (values) => {\r\n    if (!isValid) return;\r\n    const cloneValues = { ...values };\r\n    await createUserWithEmailAndPassword(auth, values.email, values.password);\r\n    const colRef = collection(db, \"users\");\r\n    addDoc(colRef, {\r\n      ...cloneValues,\r\n      avatar: \"/avatar-default.webp\",\r\n      status: userStatus.ACTIVE,\r\n      role: userRole.USER,\r\n      createAt: serverTimestamp(),\r\n    });\r\n    toast.success(\"Register successful!\", {\r\n      pauseOnHover: false,\r\n      style: {\r\n        backgroundColor: theme.toastSuccessColor,\r\n      },\r\n    });\r\n    navigate(\"/\");\r\n  };\r\n  return (\r\n    <AuthPage>\r\n      <form\r\n        className=\"form\"\r\n        onSubmit={handleSubmit(handleRegister)}\r\n        autoComplete=\"off\"\r\n      >\r\n        <Field>\r\n          <Label name=\"fullName\">Fullname</Label>\r\n          <Input\r\n            placeholder=\"Please enter your fullname\"\r\n            name=\"fullName\"\r\n            control={control}\r\n          ></Input>\r\n        </Field>\r\n        <Field>\r\n          <Label name=\"email\">Email address</Label>\r\n          <Input\r\n            placeholder=\"Please enter your email\"\r\n            name=\"email\"\r\n            control={control}\r\n          ></Input>\r\n        </Field>\r\n        <Field>\r\n          <Label name=\"password\">Password</Label>\r\n          <TogglePassword control={control}></TogglePassword>\r\n        </Field>\r\n        <Button type=\"submit\" loading={isSubmitting}>\r\n          Sign Up\r\n        </Button>\r\n        <p className=\"support\">\r\n          If you had an account, Let's click{\" \"}\r\n          <Link to={\"/login\"} className=\"support-link\">\r\n            login\r\n          </Link>\r\n        </p>\r\n      </form>\r\n    </AuthPage>\r\n  );\r\n};\r\n\r\nexport default SignUp;\r\n"],"names":["LoadingStyle","styled","props","size","border","ButtonStyle","theme","gradientColor","children","type","onClick","loading","disabled","FieldStyle","className","InputStyle","bgInput","secondary","name","control","errorMessage","field","useController","id","LabelStyle","htmlFor","IconStyle","width","height","viewBox","fill","xmlns","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","React","isPassword","setIsPassword","Input","placeholder","AuthStyle","src","alt","schema","Yup","fullName","required","min","email","password","matches","useForm","mode","resolver","yupResolver","handleSubmit","formState","errors","isSubmitting","isValid","userInfo","useAuth","navigate","useNavigate","document","title","listError","Object","values","length","toast","message","pauseOnHover","style","backgroundColor","handleRegister","cloneValues","createUserWithEmailAndPassword","auth","colRef","collection","db","addDoc","avatar","status","userStatus","role","userRole","createAt","serverTimestamp","onSubmit","autoComplete","to"],"sourceRoot":""}